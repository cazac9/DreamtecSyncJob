// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace DreamtecSyncJob.Yttrium.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    /// <summary>
    /// Response DTO of the submitted case service rating.
    /// </summary>
    public partial class ResQYttriumWebApiModelsSubmitCaseServiceRatingResultModel
    {
        /// <summary>
        /// Initializes a new instance of the
        /// ResQYttriumWebApiModelsSubmitCaseServiceRatingResultModel class.
        /// </summary>
        public ResQYttriumWebApiModelsSubmitCaseServiceRatingResultModel() { }

        /// <summary>
        /// Initializes a new instance of the
        /// ResQYttriumWebApiModelsSubmitCaseServiceRatingResultModel class.
        /// </summary>
        public ResQYttriumWebApiModelsSubmitCaseServiceRatingResultModel(Guid? id = default(Guid?), Guid? integrationId = default(Guid?), bool? wasSuccessful = default(bool?), string errorMessage = default(string))
        {
            Id = id;
            IntegrationId = integrationId;
            WasSuccessful = wasSuccessful;
            ErrorMessage = errorMessage;
        }

        /// <summary>
        /// Unique Id of the rating that was created.
        /// </summary>
        [JsonProperty(PropertyName = "Id")]
        public Guid? Id { get; set; }

        /// <summary>
        /// Unique Id returned if sent as part of the submission.
        /// This can be used on subsequent calls to update existing
        /// submissions.
        /// </summary>
        [JsonProperty(PropertyName = "IntegrationId")]
        public Guid? IntegrationId { get; set; }

        /// <summary>
        /// True if the operation was successful, false otherwise with a
        /// message in &lt;see
        /// cref="P:ResQ.Yttrium.WebApi.Models.ResultModel.ErrorMessage"&gt;ErrorMessage&lt;/see&gt;.
        /// </summary>
        [JsonProperty(PropertyName = "WasSuccessful")]
        public bool? WasSuccessful { get; set; }

        /// <summary>
        /// A friendly message indicating what went wrong if there was an
        /// error processing the request.
        /// </summary>
        [JsonProperty(PropertyName = "ErrorMessage")]
        public string ErrorMessage { get; set; }

    }
}
