// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace DreamtecSyncJob.Yttrium.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    /// <summary>
    /// Model to submit a rating for a service provided, as collected from a
    /// customer.
    /// </summary>
    public partial class ResQYttriumWebApiModelsSubmitRatingModel
    {
        /// <summary>
        /// Initializes a new instance of the
        /// ResQYttriumWebApiModelsSubmitRatingModel class.
        /// </summary>
        public ResQYttriumWebApiModelsSubmitRatingModel() { }

        /// <summary>
        /// Initializes a new instance of the
        /// ResQYttriumWebApiModelsSubmitRatingModel class.
        /// </summary>
        public ResQYttriumWebApiModelsSubmitRatingModel(Guid caseServiceId, Guid physicalDevicePersonLinkId, int rating, string source, Guid? integrationId = default(Guid?), string comment = default(string), string submitterMobileNumber = default(string), string submitterFullName = default(string))
        {
            CaseServiceId = caseServiceId;
            IntegrationId = integrationId;
            PhysicalDevicePersonLinkId = physicalDevicePersonLinkId;
            Rating = rating;
            Comment = comment;
            SubmitterMobileNumber = submitterMobileNumber;
            SubmitterFullName = submitterFullName;
            Source = source;
        }

        /// <summary>
        /// Id of the service that is being rated.
        /// </summary>
        [JsonProperty(PropertyName = "CaseServiceId")]
        public Guid CaseServiceId { get; set; }

        /// <summary>
        /// If specified, should be unique per rating submitted and will
        /// update existing rating record if found.
        /// </summary>
        [JsonProperty(PropertyName = "IntegrationId")]
        public Guid? IntegrationId { get; set; }

        /// <summary>
        /// Id of the service provider (device and person link) being rated.
        /// </summary>
        [JsonProperty(PropertyName = "PhysicalDevicePersonLinkId")]
        public Guid PhysicalDevicePersonLinkId { get; set; }

        /// <summary>
        /// A value from 0 to 5 (where 5 is outstanding, and 0 is apalling)
        /// </summary>
        [JsonProperty(PropertyName = "Rating")]
        public int Rating { get; set; }

        /// <summary>
        /// A comment provided by the person who submitted the maximum length
        /// of 2000 characters.
        /// </summary>
        [JsonProperty(PropertyName = "Comment")]
        public string Comment { get; set; }

        /// <summary>
        /// Contact number for the person who submitted the rating.
        /// </summary>
        [JsonProperty(PropertyName = "SubmitterMobileNumber")]
        public string SubmitterMobileNumber { get; set; }

        /// <summary>
        /// Name and surname of the person who submitted the rating.
        /// </summary>
        [JsonProperty(PropertyName = "SubmitterFullName")]
        public string SubmitterFullName { get; set; }

        /// <summary>
        /// Indicator of where the rating was sourced from (free string e.g.
        /// App, SMS, Web, etc.). Max length 50 characters.
        /// </summary>
        [JsonProperty(PropertyName = "Source")]
        public string Source { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            if (Source == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Source");
            }
        }
    }
}
