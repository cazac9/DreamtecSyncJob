// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace DreamtecSyncJob.Yttrium.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    public partial class ResQYttriumWebApiModelsAddCaseCommentModel
    {
        /// <summary>
        /// Initializes a new instance of the
        /// ResQYttriumWebApiModelsAddCaseCommentModel class.
        /// </summary>
        public ResQYttriumWebApiModelsAddCaseCommentModel() { }

        /// <summary>
        /// Initializes a new instance of the
        /// ResQYttriumWebApiModelsAddCaseCommentModel class.
        /// </summary>
        public ResQYttriumWebApiModelsAddCaseCommentModel(Guid caseId, string comment, Guid commentorId, DateTime date)
        {
            CaseId = caseId;
            Comment = comment;
            CommentorId = commentorId;
            Date = date;
        }

        /// <summary>
        /// The case id to add the comment on.
        /// </summary>
        [JsonProperty(PropertyName = "CaseId")]
        public Guid CaseId { get; set; }

        /// <summary>
        /// The comment.
        /// </summary>
        [JsonProperty(PropertyName = "Comment")]
        public string Comment { get; set; }

        /// <summary>
        /// Id of the commentor.
        /// </summary>
        [JsonProperty(PropertyName = "CommentorId")]
        public Guid CommentorId { get; set; }

        /// <summary>
        /// The UTC date of the comment.
        /// </summary>
        [JsonProperty(PropertyName = "Date")]
        public DateTime Date { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            if (Comment == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Comment");
            }
        }
    }
}
