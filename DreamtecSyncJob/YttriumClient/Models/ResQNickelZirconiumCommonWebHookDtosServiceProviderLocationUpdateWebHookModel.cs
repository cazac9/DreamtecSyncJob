// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace DreamtecSyncJob.Yttrium.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    public partial class ResQNickelZirconiumCommonWebHookDtosServiceProviderLocationUpdateWebHookModel
    {
        /// <summary>
        /// Initializes a new instance of the
        /// ResQNickelZirconiumCommonWebHookDtosServiceProviderLocationUpdateWebHookModel
        /// class.
        /// </summary>
        public ResQNickelZirconiumCommonWebHookDtosServiceProviderLocationUpdateWebHookModel() { }

        /// <summary>
        /// Initializes a new instance of the
        /// ResQNickelZirconiumCommonWebHookDtosServiceProviderLocationUpdateWebHookModel
        /// class.
        /// </summary>
        public ResQNickelZirconiumCommonWebHookDtosServiceProviderLocationUpdateWebHookModel(double? latitude = default(double?), double? longitude = default(double?), string serviceProviderState = default(string), Guid? physicalDevicePersonLinkId = default(Guid?), Guid? caseServiceId = default(Guid?), Guid? brokerageId = default(Guid?), ResQNickelZirconiumCommonWebHookDtosVehicleWebHookDto serviceVehicle = default(ResQNickelZirconiumCommonWebHookDtosVehicleWebHookDto), string hierarchyDescription = default(string), ResQNickelZirconiumCommonWebHookDtosRepresentativeWebHookDto representative = default(ResQNickelZirconiumCommonWebHookDtosRepresentativeWebHookDto), string representativePhotoUrl = default(string), Guid? operationId = default(Guid?), DateTime? dateOfOperationTrigger = default(DateTime?))
        {
            Latitude = latitude;
            Longitude = longitude;
            ServiceProviderState = serviceProviderState;
            PhysicalDevicePersonLinkId = physicalDevicePersonLinkId;
            CaseServiceId = caseServiceId;
            BrokerageId = brokerageId;
            ServiceVehicle = serviceVehicle;
            HierarchyDescription = hierarchyDescription;
            Representative = representative;
            RepresentativePhotoUrl = representativePhotoUrl;
            OperationId = operationId;
            DateOfOperationTrigger = dateOfOperationTrigger;
        }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Latitude")]
        public double? Latitude { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Longitude")]
        public double? Longitude { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ServiceProviderState")]
        public string ServiceProviderState { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "PhysicalDevicePersonLinkId")]
        public Guid? PhysicalDevicePersonLinkId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CaseServiceId")]
        public Guid? CaseServiceId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "BrokerageId")]
        public Guid? BrokerageId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ServiceVehicle")]
        public ResQNickelZirconiumCommonWebHookDtosVehicleWebHookDto ServiceVehicle { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "HierarchyDescription")]
        public string HierarchyDescription { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Representative")]
        public ResQNickelZirconiumCommonWebHookDtosRepresentativeWebHookDto Representative { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "RepresentativePhotoUrl")]
        public string RepresentativePhotoUrl { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "OperationId")]
        public Guid? OperationId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "DateOfOperationTrigger")]
        public DateTime? DateOfOperationTrigger { get; set; }

    }
}
