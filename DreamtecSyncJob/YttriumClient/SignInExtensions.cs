// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace DreamtecSyncJob.Yttrium
{
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;
    using Microsoft.Rest;
    using Models;

    /// <summary>
    /// Extension methods for SignIn.
    /// </summary>
    public static partial class SignInExtensions
    {
            /// <summary>
            /// This request can be used to acquire an access token to access a specific
            /// application resource
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='model'>
            /// </param>
            public static ResQYttriumWebApiModelsSignInResultModel SignIn(this ISignIn operations, ResQYttriumWebApiModelsSignInModel model)
            {
                return Task.Factory.StartNew(s => ((ISignIn)s).SignInAsync(model), operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
            }

            /// <summary>
            /// This request can be used to acquire an access token to access a specific
            /// application resource
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='model'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ResQYttriumWebApiModelsSignInResultModel> SignInAsync(this ISignIn operations, ResQYttriumWebApiModelsSignInModel model, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.SignInWithHttpMessagesAsync(model, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// This request can be used to acquire an access token to access a specific
            /// application resource for the user
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='model'>
            /// </param>
            public static ResQYttriumWebApiModelsSignInResultModel SignInUser(this ISignIn operations, ResQYttriumWebApiModelsSignInUserModel model)
            {
                return Task.Factory.StartNew(s => ((ISignIn)s).SignInUserAsync(model), operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
            }

            /// <summary>
            /// This request can be used to acquire an access token to access a specific
            /// application resource for the user
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='model'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ResQYttriumWebApiModelsSignInResultModel> SignInUserAsync(this ISignIn operations, ResQYttriumWebApiModelsSignInUserModel model, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.SignInUserWithHttpMessagesAsync(model, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// This request can be used to create a user
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='model'>
            /// </param>
            public static ResQYttriumWebApiModelsCreateUserResultModel CreateUser(this ISignIn operations, ResQYttriumWebApiModelsCreateUserModel model)
            {
                return Task.Factory.StartNew(s => ((ISignIn)s).CreateUserAsync(model), operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
            }

            /// <summary>
            /// This request can be used to create a user
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='model'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ResQYttriumWebApiModelsCreateUserResultModel> CreateUserAsync(this ISignIn operations, ResQYttriumWebApiModelsCreateUserModel model, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateUserWithHttpMessagesAsync(model, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
